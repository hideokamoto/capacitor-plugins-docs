{"title":"PaymentSheet","code":["/docs/stripe/payment-sheet/payment-sheet.ts.md"],"scrollActiveLine":[],"hypertext":"<p>With PaymentSheet, you can make payments in a single flow. As soon as the User presses the payment button, the payment is completed. (If you want user have some flow after that, please use <code>paymentFlow</code> method)</p>\n<p>This method require <code>PaymentIntent</code>. Don't know what <code>PaymentIntent</code> is? Learn it first at the official Stripe website.</p>\n<p><strong>PaymentIntent:</strong><br style=\"display: none\">\n<div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fstripe.com%2Fdocs%2Fpayments%2Fpayment-intents\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://stripe.com/docs/payments/payment-intents\" style=\"display: none\" rel=\"nofollow\">https://stripe.com/docs/payments/payment-intents</a></p>\n<p>This guide will show you an easy way to make instant payments.</p>\n<h2 id=\"1.-createpaymentsheet\"><a class=\"header-anchor-link\" href=\"#1.-createpaymentsheet\" aria-hidden=\"true\" rel=\"nofollow\"></a> 1. createPaymentSheet</h2>\n<p>This method is settings for PaymentSheet. Before use, you should connect to your backend endpoint, and get every key. This is &quot;not&quot; function at this Plugin. So you will use <code>HTTPClient</code> , <code>Axios</code> , <code>Ajax</code> , and so on. Here is example of Angular HttpClient. This method will get <code>paymentIntent</code>, <code>ephemeralKey</code>, and <code>ephemeralKey</code>.</p>\n<p>Stripe provide how to implement backend:<br style=\"display: none\">\n<div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fstripe.com%2Fdocs%2Fpayments%2Faccept-a-payment%3Fplatform%3Dios%23add-server-endpoint\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://stripe.com/docs/payments/accept-a-payment?platform=ios#add-server-endpoint\" style=\"display: none\" rel=\"nofollow\">https://stripe.com/docs/payments/accept-a-payment?platform=ios#add-server-endpoint</a></p>\n<p>After that, you set these key to <code>createPaymentSheet</code> method.</p>\n<div class=\"code-block-container\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PaymentSheetEventsEnum<span class=\"token punctuation\">,</span> Stripe <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor-community/stripe'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">createPaymentSheet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * Connect to your backend endpoint, and get every key.\n   */</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> paymentIntent<span class=\"token punctuation\">,</span> ephemeralKey<span class=\"token punctuation\">,</span> customer <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">post</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n    paymentIntent<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    ephemeralKey<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    customer<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">.</span>api <span class=\"token operator\">+</span> <span class=\"token string\">'payment-sheet'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toPromise</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">Promise</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> Stripe<span class=\"token punctuation\">.</span><span class=\"token function\">createPaymentSheet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    paymentIntentClientSecret<span class=\"token operator\">:</span> paymentIntent<span class=\"token punctuation\">,</span>\n    customerId<span class=\"token operator\">:</span> customer<span class=\"token punctuation\">,</span>\n    customerEphemeralKeySecret<span class=\"token operator\">:</span> ephemeralKey<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><p>You can use options of <code>CreatePaymentSheetOption</code> on <code>createPaymentSheet</code>.</p>\n<p>Props <code>paymentIntentClientSecret</code>, <code>customerId</code>, <code>customerEphemeralKeySecret</code> are <strong>required</strong>. And be able to <a href=\"https://stripe.com/docs/payments/accept-a-payment?platform=ios&amp;ui=payment-sheet#ios-flowcontroller\" rel=\"nofollow\">set style</a> <code>alwaysLight</code> or <code>alwaysDark</code>, prepare <a href=\"https://stripe.com/docs/payments/accept-a-payment?platform=ios&amp;ui=payment-sheet#ios-apple-pay\" rel=\"nofollow\">ApplePay</a> and <a href=\"https://stripe.com/docs/payments/accept-a-payment?platform=android&amp;ui=payment-sheet#android-google-pay\" rel=\"nofollow\">GooglePay</a> on PaymentSheet.</p>\n<h3 id=\"method-createpaymentsheet(...)\"><a class=\"header-anchor-link\" href=\"#method-createpaymentsheet(...)\" aria-hidden=\"true\" rel=\"nofollow\"></a> <code>method</code> createPaymentSheet(...)</h3>\n<p><code>createPaymentSheet(options: CreatePaymentSheetOption) =&gt; Promise&lt;void&gt;</code></p>\n<h3 id=\"interface-createpaymentsheetoption\"><a class=\"header-anchor-link\" href=\"#interface-createpaymentsheetoption\" aria-hidden=\"true\" rel=\"nofollow\"></a> <code>interface</code> CreatePaymentSheetOption</h3>\n<table>\n<thead>\n<tr>\n<th>Prop</th>\n<th>Type</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>paymentIntentClientSecret</code></strong></td>\n<td><code>string</code></td>\n<td>Any documentation call 'paymentIntent'</td>\n<td></td>\n</tr>\n<tr>\n<td><strong><code>customerEphemeralKeySecret</code></strong></td>\n<td><code>string</code></td>\n<td>Any documentation call 'ephemeralKey'</td>\n<td></td>\n</tr>\n<tr>\n<td><strong><code>customerId</code></strong></td>\n<td><code>string</code></td>\n<td>Any documentation call 'customer'</td>\n<td></td>\n</tr>\n<tr>\n<td><strong><code>enableApplePay</code></strong></td>\n<td><code>boolean</code></td>\n<td>If you set payment method ApplePay, this set true</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><strong><code>applePayMerchantId</code></strong></td>\n<td><code>string</code></td>\n<td>If set enableApplePay false, Plugin ignore here.</td>\n<td></td>\n</tr>\n<tr>\n<td><strong><code>enableGooglePay</code></strong></td>\n<td><code>boolean</code></td>\n<td>If you set payment method GooglePay, this set true</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><strong><code>GooglePayIsTesting</code></strong></td>\n<td><code>boolean</code></td>\n<td></td>\n<td><code>false,</code></td>\n</tr>\n<tr>\n<td><strong><code>countryCode</code></strong></td>\n<td><code>string</code></td>\n<td>use ApplePay and GooglePay. If set enableApplePay and enableGooglePay false, Plugin ignore here.</td>\n<td><code>&quot;US&quot;</code></td>\n</tr>\n<tr>\n<td><strong><code>merchantDisplayName</code></strong></td>\n<td><code>string</code></td>\n<td></td>\n<td><code>&quot;App Name&quot;</code></td>\n</tr>\n<tr>\n<td><strong><code>style</code></strong></td>\n<td><code>'alwaysLight' \\| 'alwaysDark'</code></td>\n<td>iOS Only</td>\n<td><code>undefined</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2.-presentpaymentsheet\"><a class=\"header-anchor-link\" href=\"#2.-presentpaymentsheet\" aria-hidden=\"true\" rel=\"nofollow\"></a> 2. presentPaymentSheet</h2>\n<p>When you do <code>presentPaymentSheet</code> method, plugin present PaymentSheet and get result. This method must do after <code>createPaymentSheet</code>.</p>\n<div class=\"code-block-container\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">present</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Stripe<span class=\"token punctuation\">.</span><span class=\"token function\">presentPaymentSheet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>paymentResult <span class=\"token operator\">===</span> PaymentSheetEventsEnum<span class=\"token punctuation\">.</span>Completed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Happy path</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><p>You can get <code>PaymentSheetResultInterface</code> from <code>presentPaymentSheet</code>.</p>\n<h3 id=\"method-presentpaymentsheet()\"><a class=\"header-anchor-link\" href=\"#method-presentpaymentsheet()\" aria-hidden=\"true\" rel=\"nofollow\"></a> <code>method</code> presentPaymentSheet()</h3>\n<p><code>presentPaymentSheet() =&gt; Promise&lt;{ paymentResult: PaymentSheetResultInterface; }&gt;</code></p>\n<h3 id=\"type-alias-paymentsheetresultinterface\"><a class=\"header-anchor-link\" href=\"#type-alias-paymentsheetresultinterface\" aria-hidden=\"true\" rel=\"nofollow\"></a> <code>type alias</code> PaymentSheetResultInterface</h3>\n<p><code>PaymentSheetEventsEnum.Completed | PaymentSheetEventsEnum.Canceled | PaymentSheetEventsEnum.Failed</code></p>\n<p><code>PaymentSheetResultInterface</code> is created from Enum of <code>PaymentSheetEventsEnum</code>. So you should import and check result.</p>\n<h2 id=\"3.-addlistener\"><a class=\"header-anchor-link\" href=\"#3.-addlistener\" aria-hidden=\"true\" rel=\"nofollow\"></a> 3. addListener</h2>\n<p>Method of PaymentSheet notify any listeners. If you want to get event of payment process is 'Completed', you should add <code>PaymentSheetEventsEnum.Completed</code> listener to <code>Stripe</code> object:</p>\n<div class=\"code-block-container\"><pre class=\"language-ts\"><code class=\"language-ts\">Stripe<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>PaymentSheetEventsEnum<span class=\"token punctuation\">.</span>Completed<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'PaymentSheetEventsEnum.Completed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><p>The event name you can use is <code>PaymentSheetEventsEnum</code>.</p>\n<h3 id=\"enum-paymentsheeteventsenum\"><a class=\"header-anchor-link\" href=\"#enum-paymentsheeteventsenum\" aria-hidden=\"true\" rel=\"nofollow\"></a> <code>enum</code> PaymentSheetEventsEnum</h3>\n<table>\n<thead>\n<tr>\n<th>Members</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>Loaded</code></strong></td>\n<td><code>&quot;paymentSheetLoaded&quot;</code></td>\n</tr>\n<tr>\n<td><strong><code>FailedToLoad</code></strong></td>\n<td><code>&quot;paymentSheetFailedToLoad&quot;</code></td>\n</tr>\n<tr>\n<td><strong><code>Completed</code></strong></td>\n<td><code>&quot;paymentSheetCompleted&quot;</code></td>\n</tr>\n<tr>\n<td><strong><code>Canceled</code></strong></td>\n<td><code>&quot;paymentSheetCanceled&quot;</code></td>\n</tr>\n<tr>\n<td><strong><code>Failed</code></strong></td>\n<td><code>&quot;paymentSheetFailed&quot;</code></td>\n</tr>\n</tbody>\n</table>\n"}